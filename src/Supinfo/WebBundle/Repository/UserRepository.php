<?php

namespace Supinfo\WebBundle\Repository;

use Doctrine\Orm\QueryBuilder;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends EntityRepository
{

    public function usernameIsAvailable($username)
    {
        $qb = $this->countQB();
        
        $qb->andWhere($qb->expr()->eq(
            $qb->expr()->lower($this->getAlias().'.username'),
            $qb->expr()->lower(':username')
        ));
        
        $qb->setParameter('username',$username);

        return $qb->getQuery()->getSingleScalarResult() < 1;
    }

    public function searchQB($query)
    {
        $qb = parent::searchQB($query);

        $qb->setParameter('query_id', preg_match('/^4[0-9]{4}$/', $query) ? substr($query, 1) : $query);

        return $qb;
    }

    public function getSearchExpr(QueryBuilder $qb)
    {
        $expr = parent::getSearchExpr($qb);

        $expr->add(
            $qb->expr()->like(
                $qb->getRootAlias().'.username',
                ':query'
            )
        );

        $expr->add(
            $qb->expr()->eq(
                $qb->getRootAlias().'.id',
                ':query_id'
            )
        );

        return $expr;
    }

    public function selectClientsQB()
    {
        $qb = $this->selectQB();

        $qb->andWhere(
            $qb->expr()->in(
                $qb->getRootAlias().'.type',
                array(1, 2)
            )
        );

        return $qb;
    }

    public function selectClients()
    {
        return $this->selectClientsQB()->getQuery()->getResult();
    }

}